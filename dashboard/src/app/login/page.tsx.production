"use client";

import React, { useState } from "react";
import Link from "next/link";
import { useRouter } from "next/navigation";
import { Eye, EyeOff, Lock, ArrowRight, User, Mail, AlertTriangle } from "lucide-react";
import { motion } from "framer-motion";
import { useAuth } from "@/hooks/useAuth";
import PixelCanvasBackground from "@/components/backgrounds/PixelCanvasBackground";

export default function LoginPage() {
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [showPassword, setShowPassword] = useState(false);
  const [rememberMe, setRememberMe] = useState(false);
  const router = useRouter();
  const { login } = useAuth();

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setError('');
    setIsLoading(true);

    try {
      await login({
        username,
        password,
        rememberMe
      });
      
      // Redirect to dashboard
      router.push('/dashboard');
    } catch (err: any) {
      setError(err.message || 'An error occurred during login');
    } finally {
      setIsLoading(false);
    }
  };

  return (
    <div className="min-h-screen flex flex-col bg-[#00091b] dark:bg-[#00091b]">
      {/* Pixel Canvas Background */}
      <PixelCanvasBackground />
      
      {/* Header */}
      <header className="border-b border-cyan-950 py-4 px-6 backdrop-blur-lg bg-[#00091b]/40">
        <div className="max-w-6xl mx-auto flex justify-between items-center">
          <Link href="/" className="text-2xl font-bold text-white flex items-center group">
            <span className="text-white transition-transform duration-500 group-hover:scale-110">Art</span>
            <span className="text-[#00cbdd] transition-transform duration-500 group-hover:scale-110 group-hover:text-blue-400">intel</span>
            <span className="bg-clip-text text-transparent bg-gradient-to-r from-[#00cbdd] to-blue-400 transition-colors duration-500 group-hover:from-[#00cbdd] group-hover:to-blue-600">LLMs</span>
          </Link>
          
          <div className="text-sm text-gray-400">
            <Link href="/register" className="hover:text-[#00cbdd] transition-colors">
              Don't have an account? Sign up
            </Link>
          </div>
        </div>
      </header>
      
      <div className="flex-1 flex items-center justify-center px-4 py-12">
        <div className="w-full max-w-md">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.5, ease: "easeOut" }}
            className="rounded-2xl overflow-hidden border border-cyan-950 bg-gray-900/70 backdrop-blur-lg shadow-xl"
          >
            {/* Error message */}
            {error && (
              <motion.div 
                initial={{ opacity: 0, height: 0 }}
                animate={{ opacity: 1, height: "auto" }}
                className="bg-red-900/30 border-l-4 border-red-500 p-4 text-red-100 flex items-start"
              >
                <AlertTriangle className="h-5 w-5 mr-2 flex-shrink-0 mt-0.5" />
                <p>{error}</p>
              </motion.div>
            )}
            
            <div className="p-8">
              <div className="text-center mb-8">
                <motion.h1 
                  initial={{ opacity: 0, y: 10 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 0.1, duration: 0.5 }}
                  className="text-3xl font-bold bg-clip-text text-transparent bg-gradient-to-r from-[#00cbdd] to-blue-600"
                >
                  Welcome Back
                </motion.h1>
                <motion.p 
                  initial={{ opacity: 0, y: 10 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 0.2, duration: 0.5 }}
                  className="mt-2 text-gray-400"
                >
                  Sign in to continue to your account
                </motion.p>
              </div>
              
              <div className="p-4 bg-blue-900/20 border border-blue-900/30 text-blue-100 rounded-lg mb-6">
                <p className="text-sm">For demo purposes, use these credentials:</p>
                <div className="mt-2 space-y-4">
                  <div className="grid grid-cols-1 gap-1 sm:grid-cols-3 sm:gap-2 text-sm">
                    <div className="col-span-1 sm:col-span-3 font-medium text-amber-300 border-b border-blue-800/50 pb-1 mb-1">Regular User</div>
                    <div>
                      <span className="font-semibold text-[#00cbdd]">Username:</span> johndoe
                    </div>
                    <div>
                      <span className="font-semibold text-[#00cbdd]">Password:</span> secret
                    </div>
                    <div>
                      <span className="font-semibold text-[#00cbdd]">Role:</span> User
                    </div>
                  </div>
                  
                  <div className="grid grid-cols-1 gap-1 sm:grid-cols-3 sm:gap-2 text-sm">
                    <div className="col-span-1 sm:col-span-3 font-medium text-purple-300 border-b border-blue-800/50 pb-1 mb-1">Admin User</div>
                    <div>
                      <span className="font-semibold text-[#00cbdd]">Username:</span> alexadmin
                    </div>
                    <div>
                      <span className="font-semibold text-[#00cbdd]">Password:</span> admin456
                    </div>
                    <div>
                      <span className="font-semibold text-[#00cbdd]">Role:</span> Admin
                    </div>
                  </div>
                </div>
              </div>
              
              <form className="space-y-6" onSubmit={handleSubmit}>
                <motion.div
                  initial={{ opacity: 0, y: 10 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 0.3, duration: 0.5 }}
                >
                  <label htmlFor="username" className="block text-sm font-medium text-gray-300 mb-1">
                    Username
                  </label>
                  <div className="relative">
                    <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                      <User className="h-5 w-5 text-gray-500" />
                    </div>
                    <input
                      id="username"
                      name="username"
                      type="text"
                      required
                      value={username}
                      onChange={(e) => setUsername(e.target.value)}
                      className="block w-full pl-10 pr-3 py-2 rounded-lg border border-gray-700 bg-gray-800/70 text-white placeholder:text-gray-500 focus:outline-none focus:ring-2 focus:ring-[#00cbdd] focus:border-transparent transition-all duration-200"
                      placeholder="Username"
                    />
                  </div>
                </motion.div>
                
                <motion.div
                  initial={{ opacity: 0, y: 10 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 0.4, duration: 0.5 }}
                >
                  <div className="flex items-center justify-between mb-1">
                    <label htmlFor="password" className="block text-sm font-medium text-gray-300">
                      Password
                    </label>
                    <Link href="/forgot-password" className="text-sm text-[#00cbdd] hover:underline transition-colors">
                      Forgot password?
                    </Link>
                  </div>
                  <div className="relative">
                    <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                      <Lock className="h-5 w-5 text-gray-500" />
                    </div>
                    <input
                      id="password"
                      name="password"
                      type={showPassword ? "text" : "password"}
                      required
                      value={password}
                      onChange={(e) => setPassword(e.target.value)}
                      className="block w-full pl-10 pr-10 py-2 rounded-lg border border-gray-700 bg-gray-800/70 text-white placeholder:text-gray-500 focus:outline-none focus:ring-2 focus:ring-[#00cbdd] focus:border-transparent transition-all duration-200"
                      placeholder="••••••••"
                    />
                    <button
                      type="button"
                      className="absolute inset-y-0 right-0 pr-3 flex items-center text-gray-500 hover:text-gray-300 transition-colors"
                      onClick={() => setShowPassword(!showPassword)}
                    >
                      {showPassword ? <EyeOff className="h-5 w-5" /> : <Eye className="h-5 w-5" />}
                    </button>
                  </div>
                </motion.div>
                
                <motion.div
                  initial={{ opacity: 0, y: 10 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 0.5, duration: 0.5 }}
                  className="flex items-center"
                >
                  <input
                    id="remember-me"
                    name="remember-me"
                    type="checkbox"
                    checked={rememberMe}
                    onChange={(e) => setRememberMe(e.target.checked)}
                    className="h-4 w-4 rounded border-gray-700 bg-gray-800 text-[#00cbdd] focus:ring-[#00cbdd] transition-colors"
                  />
                  <label htmlFor="remember-me" className="ml-2 block text-sm text-gray-300">
                    Remember me for 7 days
                  </label>
                </motion.div>
                
                <motion.div
                  initial={{ opacity: 0, y: 10 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 0.6, duration: 0.5 }}
                >
                  <button
                    type="submit"
                    disabled={isLoading}
                    className="flex items-center justify-center w-full px-6 py-3 bg-gradient-to-r from-[#00cbdd] to-blue-600 text-white rounded-lg font-medium hover:from-[#00cbdd]/90 hover:to-blue-700 transition-all duration-300 disabled:opacity-70 disabled:cursor-not-allowed"
                  >
                    {isLoading ? (
                      <>
                        <svg className="animate-spin -ml-1 mr-2 h-4 w-4 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                          <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                          <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                        </svg>
                        Signing in...
                      </>
                    ) : (
                      <>
                        Sign in
                        <ArrowRight className="ml-2 h-4 w-4" />
                      </>
                    )}
                  </button>
                </motion.div>
              </form>
              
              <motion.div 
                initial={{ opacity: 0, y: 10 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ delay: 0.7, duration: 0.5 }}
                className="mt-8 pt-6 border-t border-gray-800"
              >
                <p className="text-sm text-center text-gray-500">
                  New to ArtIntell?{' '}
                  <Link href="/register" className="text-[#00cbdd] hover:text-blue-400 font-medium transition-colors">
                    Create an account
                  </Link>
                </p>
              </motion.div>
            </div>
          </motion.div>
        </div>
      </div>
    </div>
  );
} 